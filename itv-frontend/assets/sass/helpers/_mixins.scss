/** == Mixins (_mixins.scss) == **/

@mixin no-outline {
  outline: 0 !important;
  -webkit-appearance: none;
  box-shadow: none;
  -moz-box-shadow: none;
  -webkit-box-shadow: none;
}

@mixin a-no-hover-underline {
  text-decoration: none;

  &:active,
  &:focus {
    text-decoration: none;
  }

  &:hover {
    text-decoration: none;
  }
}

@mixin a-hover-underline {
  text-decoration: none;

  &:active,
  &:focus {
    text-decoration: underline;
  }

  &:hover {
    text-decoration: underline;
  }
}

@mixin solid-underline($color: transparent) {
  @include a-no-hover-underline;
  border-bottom-width: 1px;
  border-bottom-style: solid;
  border-bottom-color: $color;

  &:hover {
    border-bottom-color: transparent;
  }
}

@mixin dashed-underline($color: transparent) {
  @include solid-underline($color);
  border-bottom-style: dashed;    
}

@mixin hover-underline($color: transparent) {
  border-bottom-color: transparent;

  &:hover {
    border-bottom-color: $color;
  }
}

@mixin drop-down-arrow($height: 16px) {
  &:after {
    content: " ";
    display: inline-block;
    margin-left: 4px;
    width: 16px;
    height: $height;
    vertical-align: bottom;
    background-size: 16px 16px;
    background-position: center center;
    background-image: url("../../img/icon-arrow-down-gray.svg");
  }
}

// buttons
@mixin button-primary-sm {
  @include button-primary;
  font-weight: 600;
  border-radius: 8px;
  padding-left: 16px;
  padding-right: 16px;
}

@mixin button-secondary-sm {
  @include button-secondary;
  font-weight: 600;
  color: $color-gray-dark-lg;
  box-shadow: none;
  border: 2px solid $color-gray-light-lg;
  border-radius: 8px;
  padding-left: 16px;
  padding-right: 16px;
}

@mixin button-secondary-sm-dark {
  @include button-secondary-sm;
  background-color: $color-gray-light-xl;
  border-color: $color-gray;

  &:hover,
  &:active,
  &:focus,
  &.active {
    background-color: $color-gray-light-md;
    border-color: $color-gray-light-md;
  }
}

@mixin button-link-sm-dark {
  @include button-secondary-sm-dark;
  border-color: transparent;
  background-color: transparent;

  &:hover,
  &:active,
  &:focus {
    border-color: transparent;
    background-color: transparent;
  }
}

@mixin button-primary {
  @include text-sm;
  @include a-no-hover-underline;
  background-color: $color-main;
  color: $color-white;
  display: inline-block;
  text-align: center;
  box-sizing: border-box;
  padding: 8px;
  border-radius: 12px;
  box-shadow: inset -1px -1px 1px rgba(0, 89, 56, 0.53);
}

@mixin button-secondary {
  @include button-primary;
  background-color: $color-white;
  color: $color-main;
  box-shadow: 1px 1px 4px rgba(129, 118, 111, 0.08),
    inset -1px -1px 1px rgba(129, 118, 111, 0.16);

  &.flat {
    box-shadow: none;
    border: 1px solid $color-gray-light-lg;
  }

  &.danger {
    color: $color-sec-dark;
  }
}

@mixin button-primary-md {
  @include button-primary;
  @include button-md;
}

@mixin button-md {
  @include text-line-sm;
  padding: 12px;
}

@mixin button-primary-md {
  @include button-primary;
  @include button-md;
}

@mixin action-button-secondary-md {
  @include button-secondary;
  @include button-md;
}

@mixin button-lg {
  @include htext;
  padding: 16px;
}

@mixin button-primary-lg {
  @include button-primary;
  @include button-lg;
}

@mixin action-button-secondary-lg {
  @include action-button-secondary;
  @include actiion-button-lg;
}

// icons
@mixin pic-small {
  width: 20px;
  height: 20px;
  border-radius: 4px;
}

/**
 * Screen
 */

@mixin screen-from($from) {
  @if (map-has-key($breakpoints, $from)) {
    $size: map-get($breakpoints, $from);
    @media (min-width: $size) {
      @content;
    }
  }
}
@mixin screen-to($to) {
  @if (map-has-key($breakpoints, $to)) {
    $size: map-get($breakpoints, $to);
    @media (max-width: $size - 1px) {
      @content;
    }
  }
}
@mixin screen($screen_from) {
  @if (map-has-key($breakpoints, $screen_from)) {
    $size_from: map-get($breakpoints, $screen_from);
    $screens: map-keys($breakpoints);
    $screen_from_index: index($screens, $screen_from);
    @if ($screen_from_index == length($screens)) {
      @media (min-width: $size_from) {
        @content;
      }
    } @else {
      $screen_to_index: $screen_from_index + 1;
      $screen_to: nth($screens, $screen_to_index);
      $size_to: map-get($breakpoints, $screen_to) - 1px;
      @media (min-width: $size_from) and (max-width: $size_to) {
        @content;
      }
    }
  }
}

// form elements
@mixin wizard-field-input {
    @include text;
    color: $color-gray-dark-md;
    background: $color-white;
    border: 1px solid $color-gray-light-lg;
    box-sizing: border-box;
    box-shadow: inset 1px 1px 2px rgba(89, 64, 0, 0.16);
    border-radius: 10px;
    width: 100%;
}